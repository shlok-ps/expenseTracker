scalar Date

type Transaction {
  id: String!
  amount: Float!
  type: String!
  category: String!
  date: Date!
  description: String
  isDuplicate: Boolean
  relatedGroupId: String
  fromAccount: String
  toAccount: String
  smsBody: String
  source: String
  sourceDescription: String
}

type Query {
  transactions(id: String): [Transaction!]!
}

type AuthPayload {
  accessToken: String!
  refreshToken: String!
}

input AddTransactionItem{
    id: String
    amount: Float!
    type: String!
    category: String!
    date: Date!
    description: String
    fromAccount: String
    toAccount: String
    smsBody: String
    source: String
    sourceDescription: String
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  refreshToken(token: String!): AuthPayload!

  addTransaction(
    transactions: [AddTransactionItem!]!
  ): [Transaction]!

  flagDuplicate(id: ID!, value: Boolean!): Transaction
}

