scalar Date

type Transaction {
  id: ID!
  amount: Float!
  type: String!
  category: String!
  date: Date!
  description: String
  isDuplicate: Boolean
  relatedGroupId: String
}

type Query {
  transactions: [Transaction!]!
}

type Mutation {
  addTransaction(
    id: ID,
    amount: Float!
    type: String!
    category: String!
    date: Date!
    description: String
  ): Transaction!

  flagDuplicate(id: ID!, value: Boolean!): Transaction
}

type AuthPayload {
  token: String!
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  addTransaction(
    amount: Float!
    type: String!
    category: String!
    date: String!
    description: String
  ): Transaction!

  flagDuplicate(id: ID!, value: Boolean!): Transaction
}

